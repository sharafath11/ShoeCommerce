<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coupon Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            margin-top: 50px;
        }

        .table th,
        .table td {
            vertical-align: middle;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/react-toastify/dist/ReactToastify.min.css">
</head>

<body>
    <div class="container">
        <h2 class="mb-4">Coupon Management</h2>

        <!-- Add Coupon Button -->
        <button class="btn btn-primary mb-4" data-bs-toggle="modal" data-bs-target="#addCouponModal">Add Coupon</button>

        <h5 class="mb-4">Existing Coupons</h5>
        <table class="table table-bordered">
          <thead>
              <tr>
                  <th>Code</th>
                  <th>Name</th>
                  <th>Discount Type</th>
                  <th>Discount Value</th>
                  <th>Starting Date</th>
                  <th>Ending Date</th>
                  <th>Minimum Price</th>
                  <th>Is Active</th>
                  <th>Actions</th>
              </tr>
          </thead>
          <tbody>
              <% coupons.forEach(coupon => { %>
                  <tr>
                      <td><%= coupon.code %></td>
                      <td><%= coupon.name %></td>
                      <td><%= coupon.discountType %></td>
                      <td><%= coupon.discountValue %></td>
                      <td><%= coupon.startingDate.toISOString().split('T')[0] %></td>
                      <td><%= coupon.endingDate.toISOString().split('T')[0] %></td>
                      <td><%= coupon.minimumPrice %></td>
                      <td><%= coupon.isActive ? 'Yes' : 'No' %></td>
                      <td>
                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editModal" 
                        onclick="populateEditModal('<%= coupon.code %>', '<%= coupon.discountType %>', <%= coupon.discountValue %>, '<%= coupon.startingDate.toISOString().split('T')[0] %>', '<%= coupon.endingDate.toISOString().split('T')[0] %>', <%= coupon.minimumPrice %>, '<%= coupon.isActive %>','<%= coupon._id %>','<%= coupon.name %>')">Edit</button>
                    
                      </td>
                  </tr>
              <% }) %>
          </tbody>
      </table>
      
      
    </div>

    <!-- Add Coupon Modal -->
    <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="couponForm">
                        <!-- Coupon Code -->
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Coupon Code</label>
                            <input type="text" class="form-control" id="couponCode" placeholder="Enter coupon code" required>
                        </div>
                        <div class="mb-3">
                            <label for="coupename" class="form-label">Coupon name</label>
                            <input type="text" class="form-control" id="cname" placeholder="Enter coupon name" required>
                        </div>

                        <!-- Discount Type -->
                        <div class="mb-3">
                            <label for="discountType" class="form-label">Discount Type</label>
                            <select class="form-select" id="discountType" required>
                                <option value="" disabled selected>Select discount type</option>
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed</option>
                            </select>
                        </div>

                        <!-- Discount Value -->
                        <div class="mb-3">
                            <label for="discountValue" class="form-label">Discount Value</label>
                            <input type="number" class="form-control" id="discountValue" placeholder="Enter discount value" required>
                        </div>

                        <!-- Minimum Price -->
                        <div class="mb-3">
                            <label for="minimumPrice" class="form-label">Minimum Price</label>
                            <input type="number" class="form-control" id="minimumPrice" placeholder="Enter minimum price" required>
                        </div>

                        <!-- Starting Date -->
                        <div class="mb-3">
                            <label for="startingDate" class="form-label">Starting Date</label>
                            <input type="date" class="form-control" id="startingDate" required>
                        </div>

                        <!-- Ending Date (Expiry Date) -->
                        <div class="mb-3">
                            <label for="endingDate" class="form-label">Ending Date</label>
                            <input type="date" class="form-control" id="endingDate" required>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-primary">Add Coupon</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form id="editForm">
                    <input type="text" name="" id="cid" hidden >
                    <div class="mb-3">
                        <label for="editCouponCode" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="editCouponCode" required>
                    </div>
                    <div class="mb-3">
                        <label for="coupenname" class="form-label">Coupon name</label>
                        <input type="text" class="form-control" id="editcname" required>
                    </div>
                    <div class="mb-3">
                        <label for="editDiscountType" class="form-label">Discount Type</label>
                        <select class="form-select" id="editDiscountType" required>
                            <option value="" disabled selected>Select discount type</option>
                            <option value="percentage">Percentage</option>
                            <option value="fixed">Fixed</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editDiscountValue" class="form-label">Discount Value</label>
                        <input type="number" class="form-control" id="editDiscountValue" required>
                    </div>
                    <div class="mb-3">
                        <label for="editMinimumPrice" class="form-label">Minimum Price</label>
                        <input type="number" class="form-control" id="editMinimumPrice" required>
                    </div>
                    <div class="mb-3">
                        <label for="editStartingDate" class="form-label">Starting Date</label>
                        <input type="date" class="form-control" id="editStartingDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="editExpiryDate" class="form-label">Expiry Date</label>
                        <input type="date" class="form-control" id="editExpiryDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="editIsActive" class="form-label">Active Status</label>
                        <select class="form-select" id="editIsActive" required>
                            <option value="" disabled selected>Select status</option>
                            <option value="true">Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Update Coupon</button>
                </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function populateEditModal(code, discountType, discountValue, startingDate, expiryDate, minimumPrice, isActive,cid,cname) {
    document.getElementById("editcname").value=cname
    document.getElementById("cid").value=cid
    document.getElementById('editCouponCode').value = code;
    document.getElementById('editDiscountType').value = discountType;
    document.getElementById('editDiscountValue').value = discountValue;
    document.getElementById('editMinimumPrice').value = minimumPrice;
    document.getElementById('editStartingDate').value = startingDate;
    document.getElementById('editExpiryDate').value = expiryDate;
    document.getElementById('editIsActive').value = isActive.toString(); // Convert boolean to string
}

document.getElementById('editForm').addEventListener('submit', async function(event) {
    event.preventDefault(); // Prevent the default form submission
    const cid=document.getElementById("cid").value
    console.log('====================================');
    console.log(cid);
    console.log('====================================');
    const couponCode = document.getElementById('editCouponCode').value;
    const cname = document.getElementById('editcname').value;
    const discountType = document.getElementById('editDiscountType').value;
    const discountValue = document.getElementById('editDiscountValue').value;
    const minimumPrice = document.getElementById('editMinimumPrice').value;
    const startingDate = document.getElementById('editStartingDate').value;
    const endingDate = document.getElementById('editExpiryDate').value;
    const isActive = document.getElementById('editIsActive').value === 'true'; 

    // Validation: Check if expiry date is after starting date
    if (new Date(startingDate) >= new Date(endingDate)) {
        Toastify({
            text: "Expiry Date must be after Starting Date!",
            duration: 3000,
            gravity: "top",
            position: 'right',
            backgroundColor: "#FF5722", // Red color
        }).showToast();
        return; // Exit if validation fails
    }

    // Validate minimum price against discount value
    if (discountType === 'fixed' && minimumPrice < discountValue) {
        Toastify({
            text: "Minimum Price must be greater than or equal to Discount Value!",
            duration: 3000,
            gravity: "top",
            position: 'right',
            backgroundColor: "#FF5722", // Red color
        }).showToast();
        return; // Exit if validation fails
    }

    // Create a data object to send to the server
    const data = {
        _id:cid,
        name:cname,
        code: couponCode,
        discountType,
        discountValue: Number(discountValue), // Ensure it's a number
        minimumPrice: Number(minimumPrice),
        startingDate: new Date(startingDate),
        endingDate: new Date(endingDate),
        isActive
    };

    // Use SweetAlert to confirm the update
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to update this coupon?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, update it!',
        cancelButtonText: 'No, cancel!',
    });

    if (result.isConfirmed) {
        try {
            
            const response = await axios.put('/admin/coupons/update', data);
         showToast(response.data.msg)
            
            function showToast(message) {
         Toastify({
        text: message,
        duration: 2000,
        gravity: "top",
        position: "right",
        style: {
            background: "#333" 
        },
        stopOnFocus: true
    }).showToast();
}

            // Reload the page or update the table as necessary
            location.reload();
        } catch (error) {

            console.error('Error updating coupon:', error);
            Toastify({
                text: "Error updating coupon!",
                duration: 3000,
                gravity: "top",
                position: 'right',
                backgroundColor: "#FF5722", 
            }).showToast();
        }
    }
});

    </script>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/react-toastify/dist/ReactToastify.min.css">
</head>

<body>
  

  <!-- Add Toastify and SweetAlert2 JS libraries -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>


  <script>
     function showToast(message) {
    Toastify({
        text: message,
        duration: 2000,
        gravity: "top",
        position: "right",
        style: {
            background: "#333" 
        },
        stopOnFocus: true
    }).showToast();
}

      
document.getElementById('couponForm').addEventListener('submit', function (event) {
    event.preventDefault();
    
    // Get form values
    const couponCode = document.getElementById('couponCode').value.trim();
    const cname=document.getElementById("cname").value
    const discountType = document.getElementById('discountType').value.trim();
    const discountValue = document.getElementById('discountValue').value;
    const minimumPrice = document.getElementById('minimumPrice').value;
    const startingDate = document.getElementById('startingDate').value;
    const endingDate = document.getElementById('endingDate').value;
    if(!cname){
        showToast('Coupon name is required', 'error');
        return;
    }

    // Basic validation checks
    if (!couponCode) {
        showToast('Coupon Code is required', 'error');
        return;
    }

    // Ensure coupon code has at least 8 characters
    if (couponCode.length < 8) {
        showToast('Coupon Code must be at least 8 characters long', 'error');
        return;
    }

    if (!discountType) {
        showToast('Please select a Discount Type', 'error');
        return;
    }

    if (!discountValue || discountValue <= 0) {
        showToast('Discount Value must be greater than 0', 'error');
        return;
    }

    if (!minimumPrice || minimumPrice <= 0) {
        showToast('Minimum Price must be greater than 0', 'error');
        return;
    }

    if (!startingDate) {
        showToast('Starting Date is required', 'error');
        return;
    }

    if (!endingDate) {
        showToast('Ending Date is required', 'error');
        return;
    }

    const currentDate = new Date().toISOString().split('T')[0]; 
    if (startingDate < currentDate) {
        showToast('Starting Date must be today or in the future', 'error');
        return;
    }
    if (endingDate <= startingDate) {
        showToast('Ending Date must be after the Starting Date', 'error');
        return;
    }

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to add this coupon?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, add it!'
    }).then((result) => {
        if (result.isConfirmed) {
            axios.post('/admin/coupons/addCoupen', {
                code: couponCode,
                name:cname,
                discountType: discountType,
                discountValue: discountValue,
                minimumPrice: minimumPrice,
                startingDate: startingDate,
                endingDate: endingDate
            })
                .then(response => {
                    if (response.data.ok) {
                        showToast(response.data.msg);
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showToast(response.data.msg, 'error');
                    }
                })
                .catch(error => {
                    showToast('Failed to add coupon. Try again.', 'error');
                });
        }
    });
});


  </script>
</body>

</html>
