<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<!-- Toastify JS -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>
    <title>Admin Offers</title>
    <style>
      body {
        padding: 20px;
      }
      h1 {
        margin-bottom: 30px;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="row">
        <!-- Sidebar (Left) -->
        <div class="col-md-3">
          <%- include('partials/sidebar') %>
        </div>
    
        <!-- Content (Right) -->
        <div class="col-md-9">
          <h1>Admin Offers</h1>
    
          <!-- Add Offer Button -->
          <button type="button" class="btn btn-primary mb-4" data-bs-toggle="modal" data-bs-target="#addOfferModal" onclick="clearAddForm()">
            Add New Offer
          </button>
    
          <!-- Filter by Category -->
          <div class="mb-4 d-flex align-items-end">
            <div class="me-3">
              <h5>Filter by Category</h5>
              <select class="form-select" id="categoryFilter" aria-label="Filter by Category">
                <option value="">All Categories</option>
                <% categories.forEach(category => { %>
                <option value="<%= category.id %>"><%= category.name %></option>
                <% }) %>
              </select>
            </div>
    
            <div class="me-3">
              <h5>Filter by Status</h5>
              <select class="form-select" id="isActiveFilter" aria-label="Filter by Status">
                <option value="">All Offers</option>
                <option value="true">Active Offers</option>
                <option value="false">Inactive Offers</option>
              </select>
            </div>
    
            <button class="btn btn-primary" onclick="filterOffers()">Filter</button>
            <a href="/admin/offers" class="btn btn-dark ms-2">Reset filter</a>
          </div>
    
          <!-- Offers Table -->
          <table class="table table-striped">
            <thead>
              <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Description</th>
                <th>Discount</th>
                <th>Category</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% offers.forEach((offer, index) => { %>
              <tr>
                <td><%= index + 1 %></td> <!-- Show the index instead of static ID -->
                <td><%= offer.title %></td>
                <td><%= offer.description %></td>
                <td><%= offer.discount %></td>
                <td><%= offer.categoryId.name %></td>
                <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                <td><%= new Date(offer.expireDate).toLocaleDateString() %></td>
                <td><%= offer.isActive %></td>
                <td>
                  <button class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editOfferModal" 
                    onclick="editOffer('<%= offer._id %>', '<%= offer.title %>', '<%= offer.description %>', <%= offer.discount %>, '<%= offer.categoryId._id %>', <%= offer.isActive %>, '<%= new Date(offer.startDate).toISOString().split('T')[0] %>', '<%= new Date(offer.expireDate).toISOString().split('T')[0] %>')">
                    Edit
                  </button>
                 
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    

    <!-- Modal for Adding Offers -->
    <div
      class="modal fade"
      id="addOfferModal"
      tabindex="-1"
      aria-labelledby="addOfferModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addOfferModalLabel">Add Offer</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addOfferForm">
                <div class="mb-3">
                  <label for="addOfferTitle" class="form-label">Offer Title</label>
                  <input
                    type="text"
                    class="form-control"
                    id="addOfferTitle"
                    required
                  />
                </div>
                <div class="mb-3">
                  <label for="addOfferDescription" class="form-label">Description</label>
                  <input
                    type="text"
                    class="form-control"
                    id="addOfferDescription"
                    required
                  />
                </div>
                <div class="mb-3">
                  <label for="addOfferDiscount" class="form-label">Discount</label>
                  <input
                    type="number"
                    class="form-control"
                    id="addOfferDiscount"
                    min="1"
                    max="99"
                    required
                  />
                </div>
                
                <div class="mb-3">
                  <label for="addOfferCategory" class="form-label">Category</label>
                  <select class="form-select mb-3" id="addOfferCategory">
                    <option selected>All Categories</option>
                    <% categories.forEach(category => { %>
                    <option value="<%= category._id %>">
                      <%= category.name %>
                    </option>
                    <% }) %>
                  </select>
                </div>
                <div class="mb-3">
                  <label for="addOfferStartDate" class="form-label">Start Date</label>
                  <input
                    type="date"
                    class="form-control"
                    id="addOfferStartDate"
                    required
                  />
                </div>
                <div class="mb-3">
                  <label for="addOfferEndDate" class="form-label">End Date</label>
                  <input
                    type="date"
                    class="form-control"
                    id="addOfferEndDate"
                    required
                  />
                </div>
                <div class="mb-3">
                  <label class="form-label" for="addOfferIsActive">Is Active</label><br />
                  <input
                    type="checkbox"
                    id="addOfferIsActive"
                    name="isActive"
                    value="true"
                  />
                  <label for="addOfferIsActive">Active</label>
                </div>
                <div class="mb-3">
                  <button type="submit" class="btn btn-primary">Submit</button>
                </div>
              </form>
              
          </div>
        </div>
      </div>
    </div>

    <!-- Modal for Editing Offers -->
    <div
      class="modal fade"
      id="editOfferModal"
      tabindex="-1"
      aria-labelledby="editOfferModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editOfferModalLabel">Edit Offer</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="editOfferForm" onsubmit="editOfferHandler(event)">
                <input type="text" hidden id="catOffId">
                <div class="mb-3">
                  <label for="editOfferTitle" class="form-label">Offer Title</label>
                  <input type="text" class="form-control" id="editOfferTitle" required />
                </div>
                <div class="mb-3">
                  <label for="editOfferDescription" class="form-label">Description</label>
                  <input type="text" class="form-control" id="editOfferDescription" required />
                </div>
                <div class="mb-3">
                  <label for="editOfferDiscount" class="form-label">Discount</label>
                  <input type="number" class="form-control" id="editOfferDiscount"  required />
                </div>
                <div class="mb-3">
                 
                </div>
                <div class="mb-3">
                  <label for="editOfferCategory" class="form-label">Category</label>
                  <select class="form-select mb-3" id="editOfferCategory">
                    <option selected>All Categories</option>
                    <% categories.forEach(category => { %>
                    <option value="<%= category.id %>"><%= category.name %></option>
                    <% }) %>
                    
                  </select>
                </div>
                <div class="mb-3">
                  <label for="isActiveEdit">Is Active</label><br />
                  <input type="radio" name="isActiveEdit" id="isActiveTrue" value="true" />
                  <label for="isActiveTrue">Yes</label>
                  <input type="radio" name="isActiveEdit" id="isActiveFalse" value="false" />
                  <label for="isActiveFalse">No</label>
                </div>
                <div class="mb-3">
                  <label for="editOfferStartDate" class="form-label">Start Date</label>
                  <input type="date" class="form-control" id="editOfferStartDate" required />
                </div>
                <div class="mb-3">
                  <label for="editOfferEndDate" class="form-label">End Date</label>
                  <input type="date" class="form-control" id="editOfferEndDate" required />
                </div>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </form>
            
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
         
          </div>
        </div>
      </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      function clearAddForm() {
        document.getElementById("addOfferForm").reset();
      }
      
      function validateOfferData(offerData) {
        const { title, description, discount, category, startDate, endDate } = offerData;
        if (!title.trim()) return Swal.fire("Error", "Offer title is required.", "error"), false;
        if(discount<1){
          return Swal.fire("discount Minimum 1"),false
        }
        if(discount>99){
          return Swal.fire("discount maximum 99"),false
        }
        if (!description.trim()) return Swal.fire("Error", "Offer description is required.", "error"), false;
        if (!discount || isNaN(discount) || discount <= 0) return Swal.fire("Error", "Valid discount amount is required.", "error"), false;
        if (!category.trim()) return Swal.fire("Error", "Category must be selected.", "error"), false;
        if (!startDate) return Swal.fire("Error", "Start date is required.", "error"), false;
        if (!endDate) return Swal.fire("Error", "End date is required.", "error"), false;
        if (new Date(startDate) > new Date(endDate)) return Swal.fire("Error", "Start date cannot be later than end date.", "error"), false;
        return true;
      }
      
      async function addOffer(offerData) {
        const confirmation = await Swal.fire({
          title: "Are you sure?", text: "Do you want to add this offer?", icon: "warning", showCancelButton: true,
          confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Yes, add it!", cancelButtonText: "No, cancel"
        });
      
        if (confirmation.isConfirmed) {
          try {
            const response = await axios.post("/admin/addCoffers", offerData);
            response.data.ok
              ? (Swal.fire({ icon: "success", title: "Success", text: response.data.msg, timer: 3000, showConfirmButton: false }), clearAddForm())
              : Swal.fire({ icon: "error", title: "Error", text: response.data.msg || "There was a problem adding the offer!", showConfirmButton: false });
          } catch (error) {
            Swal.fire({ icon: "error", title: "Error", text: error.response?.data?.msg || "There was a problem adding the offer!", timer: 3000, showConfirmButton: false });
          }
        }
      }
      
      document.getElementById("addOfferForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const offerData = {
          title: document.getElementById("addOfferTitle").value,
          description: document.getElementById("addOfferDescription").value,
          discount: document.getElementById("addOfferDiscount").value,
          category: document.getElementById("addOfferCategory").value,
          startDate: document.getElementById("addOfferStartDate").value,
          endDate: document.getElementById("addOfferEndDate").value,
          isActive: document.getElementById('addOfferIsActive').checked
        };
        if (validateOfferData(offerData)) {
          await addOffer(offerData);
          bootstrap.Modal.getInstance(document.getElementById("addOfferModal")).hide();
        }
      });
      
      function showToast(message) {
        Toastify({
          text: message, duration: 2000, gravity: "top", position: "right", style: { background: "#333" }, stopOnFocus: true
        }).showToast();
      }
      
      function editOffer(id, title, description, discount, categoryId, isActive, startDate, expireDate) {
        isActive = (isActive === 'true');
        document.getElementById("catOffId").value = id;
        document.getElementById("editOfferTitle").value = title;
        document.getElementById("editOfferDescription").value = description;
        document.getElementById("editOfferDiscount").value = discount;
        document.getElementById("editOfferCategory").value = categoryId;
        document.getElementById("editOfferStartDate").value = startDate;
        document.getElementById("editOfferEndDate").value = expireDate;
        document.getElementById(isActive ? "isActiveTrue" : "isActiveFalse").checked = true;
        document.getElementById("editOfferForm").setAttribute("data-offer-id", id);
      }
      
      async function editOfferHandler(e) {
        e.preventDefault();
        const editofferData = {
          id: document.getElementById("catOffId").value,
          title: document.getElementById("editOfferTitle").value,
          description: document.getElementById("editOfferDescription").value,
          discount: document.getElementById("editOfferDiscount").value,
          category: document.getElementById("editOfferCategory").value,
          startDate: document.getElementById("editOfferStartDate").value,
          isActive: document.querySelector('input[name="isActiveEdit"]:checked').value === 'true',
          endDate: document.getElementById("editOfferEndDate").value
        };
      
        if (!validateOfferData(editofferData)) return;
      
        const confirmation = await Swal.fire({
          title: "Are you sure?", text: "Do you want to update this offer?", icon: "warning", showCancelButton: true,
          confirmButtonColor: "#3085d6", cancelButtonColor: "#d33", confirmButtonText: "Yes, update it!", cancelButtonText: "No, cancel"
        });
      
        if (confirmation.isConfirmed) {
          try {
            const response = await axios.post(`/admin/editCoffers/${editofferData.id}`, editofferData);
            if (response.data.ok) {
              Toastify({
                text: response.data.msg, duration: 3000, gravity: "top", position: "right",
                backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)", stopOnFocus: true
              }).showToast();
              bootstrap.Modal.getInstance(document.getElementById("editOfferModal")).hide();
              window.location.reload();
            } else {
              Toastify({
                text: response?.data?.msg || "Error updating the offer!", duration: 3000, gravity: "top", position: "right",
                backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)", stopOnFocus: true
              }).showToast();
            }
          } catch (error) {
            Toastify({
              text: error.response?.data?.msg || "Error updating the offer!", duration: 3000, gravity: "top", position: "right",
              backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)", stopOnFocus: true
            }).showToast();
          }
        }
      }
      
      document.getElementById('editOfferForm').addEventListener('submit', editOfferHandler);
      
      function filterOffers() {
        const categorySelect = document.querySelector('#categoryFilter');
        const isActiveSelect = document.querySelector('#isActiveFilter');
        const queryParams = new URLSearchParams();
        if (categorySelect.value) queryParams.append('category', categorySelect.value);
        if (isActiveSelect.value) queryParams.append('isActive', isActiveSelect.value);
        window.location.href = `/admin/offers?${queryParams.toString()}`;
      }
      </script>
      <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script> 
  </body>
</html>
