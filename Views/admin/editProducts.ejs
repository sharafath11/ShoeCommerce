<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Product</title>
    <!-- Bootstrap CSS -->
    <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
        rel="stylesheet"
    />
    <!-- Cropper.js CSS -->
    <link
        href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css"
        rel="stylesheet"
    />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<!-- SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Toastify CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<!-- Toastify JS -->
<script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>
    <style>
        .image-preview {
            width: 100%;
            height: 200px;
            object-fit: cover;
            margin-bottom: 15px;
            border: 2px solid #ddd;
        }
        .row {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Edit Product</h2>

        <form id="edit-product-form">
            <input type="text" name="id" id="id" hidden value="<%= product._id %>">
            <div class="mb-3">
                <label for="name" class="form-label">Product Name</label>
                <input
                    type="text"
                    class="form-control"
                    id="name"
                    name="name"
                    value="<%= product.name %>"
                    required
                />
            </div>
            <div class="mb-3">
                <label for="brand" class="form-label">Brand</label>
                <input
                    type="text"
                    class="form-control"
                    id="brand"
                    name="brand"
                    value="<%= product.brand %>"
                    required
                />
            </div>
            <div class="mb-3">
                <label class="form-label">Available Sizes and Stock</label>
                <div id="sizeContainer">
                    <% product.availableSize.forEach(function(sizeStock) { %>
                        <div class="d-flex mb-2 size-stock-row">
                            <input type="text" name="size" class="form-control me-2" value="<%= sizeStock.size %>" placeholder="Size" required style="width: 100px;" />
                            <input type="number" name="stock" class="form-control me-2" value="<%= sizeStock.stock %>" placeholder="Stock" required style="width: 100px;" />
                            <button type="button" class="btn btn-danger remove-size-stock">Remove</button>
                        </div>
                    <% }) %>
                </div>
                <button type="button" id="addSizeStock" class="btn btn-primary mt-2">Add Size & Stock</button>
            </div>
            
            <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input
                    type="number"
                    class="form-control"
                    id="price"
                    name="price"
                    value="<%= product.price %>"
                    required
                />
            </div>
            <div class="mb-3">
                <label for="color" class="form-label">Color</label>
                <input
                    type="text"
                    class="form-control"
                    id="color"
                    name="color"
                    value="<%= product.color %>"
                    required
                />
            </div>
            <div class="mb-3">
                <label for="description" class="form-label">Description</label>
                <textarea
                    class="form-control"
                    id="description"
                    name="description"
                    rows="4"
                    required
                ><%= product.description %></textarea>
            </div>
            <div class="mb-3">
                <label for="category" class="form-label">Category</label>
                <select id="category" name="category" class="form-select" required>
                    <% categories.forEach(function(category) { %>
                        <option
                            value="<%= category._id %>"
                            <%= category._id.equals(product.categoryId._id) ? 'selected' : '' %>
                        >
                            <%= category.name %>
                        </option>
                    <% }); %>
                </select>
            </div>
            <div class="mb-3">
                <label for="imageUpload" class="form-label">Images</label>
                <input type="file" class="form-control" id="imageUpload" name="images" multiple accept="image/*" />

                <div id="imagePreviewContainer" class="row mt-2">
                    <center>
                        <h2 class="mt-5 p-5">Do you want to crop this image? Please upload that image.</h2>
                    </center>
                    <% product.images.forEach(function(image, index) { %>
                        <div class="col-md-4">
                            <img src="<%= product.images[index].replace('public', '') %>" class="image-preview" />
                        </div>
                    <% }); %>
                </div>
            </div>
            <input type="hidden" id="croppedImages" name="croppedImages" />
            <button type="submit" class="btn btn-primary">Update Product</button>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        let croppers = [];
    
        // Function to show Toastify notifications
        function showToast(message) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
            }).showToast();
        }
    
        document.getElementById("imageUpload").addEventListener("change", function (event) {
            const files = event.target.files;
            const previewContainer = document.getElementById("imagePreviewContainer");
    
            previewContainer.innerHTML = ""; 
            if (files.length !== 3) {
                showToast("Please upload exactly 3 images.");
                event.target.value = "";
                return;
            }
    
            Array.from(files).forEach((file) => {
                const reader = new FileReader();
    
                reader.onload = function (e) {
                    const colDiv = document.createElement("div");
                    colDiv.className = "col-md-4";
                    const image = new Image();
                    image.src = e.target.result;
                    image.className = "image-preview";
                    colDiv.appendChild(image);
                    previewContainer.appendChild(colDiv);
    
                    const cropper = new Cropper(image, {
                        aspectRatio: 1,
                        autoCropArea: 1,
                        responsive: true,
                        scalable: false,
                    });
    
                    croppers.push(cropper);
                };
    
                reader.readAsDataURL(file);
            });
        });
    
        const sizeContainer = document.getElementById('sizeContainer');
        const addSizeStockButton = document.getElementById('addSizeStock');
    
        addSizeStockButton.addEventListener('click', () => {
            const sizeStockRow = document.createElement('div');
            sizeStockRow.classList.add('d-flex', 'mb-2', 'size-stock-row');
    
            sizeStockRow.innerHTML = 
                `<input type="text" name="size" class="form-control me-2" placeholder="Size" required style="width: 100px;" />
                 <input type="number" name="stock" class="form-control me-2" placeholder="Stock" required style="width: 100px;" />
                 <button type="button" class="btn btn-danger remove-size-stock">Remove</button>`;
    
            sizeContainer.appendChild(sizeStockRow);
    
            sizeStockRow.querySelector('.remove-size-stock').addEventListener('click', () => {
                sizeContainer.removeChild(sizeStockRow);
            });
        });
    
        document.getElementById("edit-product-form").addEventListener("submit", function (event) {
            event.preventDefault();
    
            const name = document.getElementById("name").value.trim();
            const brand = document.getElementById("brand").value.trim();
            const availableSizes = [];
            const color = document.getElementById("color").value.trim();
            const productDescription = document.getElementById("description").value.trim();
            const productPrice = document.getElementById("price").value.trim();
            const productCategory = document.getElementById("category").value.trim();
    
            if (name === "" || brand === "" || color === "" || productDescription === "" || productPrice === "" || productCategory === "") {
                showToast("All fields are required!");
                return;
            }
    
            if (productPrice < 1) {
                showToast("Price must be greater than zero.");
                return;
            }
    
            let isValidSizeStock = false;
    
            document.querySelectorAll('.size-stock-row').forEach(row => {
                const size = row.querySelector('input[name="size"]').value.trim();
                const stock = row.querySelector('input[name="stock"]').value.trim();
    
                if (size <= 1) {
                    isValidSizeStock = true;
                    showToast("Size must be greater than zero.");
                    return;
                }
                if (stock < 0) {
                    isValidSizeStock = true;
                    showToast("Stock not allowed less than zero.");
                    return;
                }
                if (size && stock) {
                    availableSizes.push({ size, stock });
                }
            });
            if (isValidSizeStock) return;
    
            if (availableSizes.length === 0) {
                showToast("Please add at least one size and stock.");
                return;
            }
    
            if (!color || !/^[A-Za-z'\s]+$/.test(color)) {
                showToast("Color contains invalid characters or is empty.");
                return;
            }
    
            if (!brand || !/^[A-Za-z'\s]+$/.test(brand)) {
                showToast("Brand contains invalid characters or is empty.");
                return;
            }
    
            if (!name || !/^[A-Za-z'0-9\s]+$/.test(name)) {
                showToast("Name contains invalid characters or is empty.");
                return;
            }
    
            if (!productDescription || !/^[A-Za-z'0-9\s]+$/.test(productDescription)) {
                showToast("Description contains invalid characters or is empty.");
                return;
            }
    
            const formData = new FormData();
            formData.append("id", document.getElementById("id").value);
            formData.append("name", name);
            formData.append("brand", brand);
            formData.append("color", color);
            formData.append("description", productDescription);
            formData.append("price", productPrice);
            formData.append("category", productCategory);
            
            formData.append("sizes", JSON.stringify(availableSizes));
            croppers.forEach((cropper, index) => {
                const croppedCanvas = cropper.getCroppedCanvas({
                    width: 300,
                    height: 300,
                });
                const croppedImage = croppedCanvas.toDataURL("image/jpeg");
    
                const byteString = atob(croppedImage.split(",")[1]);
                const arrayBuffer = new ArrayBuffer(byteString.length);
                const uint8Array = new Uint8Array(arrayBuffer);
    
                for (let i = 0; i < byteString.length; i++) {
                    uint8Array[i] = byteString.charCodeAt(i);
                }
    
                const blob = new Blob([uint8Array], { type: "image/jpeg" });
                formData.append(`croppedImages`, blob, `croppedImage_${index}.jpg`);
            });
    
            SweetAlert.fire({
                title: "Are you sure?",
                text: "Do you want to edit the product?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, edit it!",
                cancelButtonText: "No, cancel!",
            }).then((result) => {
                if (result.isConfirmed) {
                    axios
                        .post("/admin/products/edit-products", formData, {
                            headers: {
                                "Content-Type": "multipart/form-data",
                            },
                        })
                        .then((response) => {
                            if (response.data.ok) {
                                showToast(response.data.msg);
                                window.location.href = response.data.red;
                            } else {
                                showToast(response.data.error);
                            }
                        })
                        .catch((error) => {
                            console.error(error);
                            showToast("An error occurred while updating the product.");
                        });
                }
            });
        });
    </script>
    
    
</body>
</html>
