<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <title>Product Offers</title>
    <style>
      body {
        padding: 20px;
      }
      h1 {
        margin-bottom: 30px;
      }
    </style>
  </head>
  <body>
    <div class="container-fluid">
      <div class="row">
     
        <div class="col-md-3">
              <%- include('partials/sideBar') %> 
        </div>
    
        <!-- Content (Right) -->
        <div class="col-md-9">
          <h1>Admin Offers</h1>
    
          <!-- Add Offer Button -->
          <button type="button" class="btn btn-primary mb-4">
           <a href="/admin/add/product/offer" style="text-decoration: none ; color: rgb(255, 255, 255);"> Add New Offer</a>
          </button>
    
          <!-- Filter by Category -->
          <div class="mb-4 d-flex align-items-end">
            
    
            <div class="me-3">
              <h5>Search by Product Name</h5>
              <input type="text" class="form-control" id="productNameFilter" placeholder="Enter product name" aria-label="Search by Product Name">
            </div>
            
            <button class="btn btn-primary" onclick="filterOffers()">Search</button>
            
            <a href="/admin/product-offers" class="btn btn-dark ms-2">Reset filter</a>
          </div>
    
          <!-- Offers Table -->
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Product name</th>
                <th>Title</th>
                <th>Description</th>
                <th>Discount</th>
                <th>Category</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% offers.forEach((offer) => { %>
                <tr>
                 <td><%= offer.productName %></td>
                  <td><%= offer.offerName %></td>
                  <td><%= offer.description %></td>
                  <td><%= offer.discountPercentage %> %</td>
                  <td><%= offer.products.categoryName %></td> 
                  <td><%= new Date(offer.startDate).toLocaleDateString() %></td>
                  <td><%= new Date(offer.endDate).toLocaleDateString() %></td>
                  <td><%= offer.isActive ? "Active" : "Inactive" %></td>
                  <td>
                    <button class="btn btn-primary btn-sm" onclick='openEditModal(<%= JSON.stringify(offer) %>)'>Edit</button>
                  </td>
                  
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    

    <!-- Modal for Editing Offers -->
    <div class="modal fade" id="editOfferModal" tabindex="-1" aria-labelledby="editOfferModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editOfferModalLabel">Edit Offer</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="editOfferForm">
              <div class="mb-3">
                <label for="editOfferTitle" class="form-label">Offer Title</label>
                <input type="text" class="form-control" id="editOfferTitle" required />
              </div>
              <div class="mb-3">
                <label for="editOfferDescription" class="form-label">Description</label>
                <input type="text" class="form-control" id="editOfferDescription" required />
              </div>
              <div class="mb-3">
                <label for="editOfferDiscount" class="form-label">Discount</label>
                <input type="number" class="form-control" id="editOfferDiscount" min="0" max="99" required />
              </div>
              <div class="mb-3">
                <label for="editOfferCategory" class="form-label">Product Name</label>
                <input type="text" readonly id="productName">
              </div>
              <div class="mb-3">
                <label for="isActiveEdit">Is Active</label><br />
                <input type="radio" name="isActiveEdit" id="isActiveTrue" value="true" />
                <label for="isActiveTrue">Yes</label>
                <input type="radio" name="isActiveEdit" id="isActiveFalse" value="false" />
                <label for="isActiveFalse">No</label>
              </div>
              <div class="mb-3">
                <label for="editOfferStartDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" id="editOfferStartDate" required />
              </div>
              <div class="mb-3">
                <label for="editOfferEndDate" class="form-label">End Date</label>
                <input type="date" class="form-control" id="editOfferEndDate" required />
              </div>
              <button type="submit" class="btn btn-primary" >Save changes</button>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </body>
</html>
<script>
  let offerId
  let productId;
  function openEditModal(offer) {
    offerId=offer._id
    productId=offer.products
    document.getElementById('editOfferTitle').value = offer.offerName;
    document.getElementById('editOfferDescription').value = offer.description;
    document.getElementById('editOfferDiscount').value = offer.discountPercentage;
    document.getElementById('productName').value = offer.productName 
    document.getElementById('isActiveTrue').checked = offer.isActive;
    document.getElementById('isActiveFalse').checked = !offer.isActive;
    document.getElementById('editOfferStartDate').value = new Date(offer.startDate).toISOString().split('T')[0];
    document.getElementById('editOfferEndDate').value = new Date(offer.endDate).toISOString().split('T')[0];

    // Show the modal
    const editOfferModal = new bootstrap.Modal(document.getElementById('editOfferModal'));
    editOfferModal.show();
  }

  document.querySelectorAll('.btn-primary.btn-sm').forEach((button, index) => {
    button.addEventListener('click', () => {
      const offer = offers[index]; 
      openEditModal(offer);
    });
  });






  document.getElementById('editOfferForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  // Get input values
  const offerName = document.getElementById('editOfferTitle').value.trim();
  const description = document.getElementById('editOfferDescription').value.trim();
  const discountPercentage = document.getElementById('editOfferDiscount').value.trim();
  const isActive = document.getElementById('isActiveTrue').checked;
  const startDate = document.getElementById('editOfferStartDate').value;
  const endDate = document.getElementById('editOfferEndDate').value;

  if (!offerName) {
    Swal.fire('Validation Error', 'Offer title is required', 'warning');
    return;
  }

  if (!description) {
    Swal.fire('Validation Error', 'Description is required', 'warning');
    return;
  }

  if (!discountPercentage || isNaN(discountPercentage) || discountPercentage < 0 || discountPercentage > 100) {
    Swal.fire('Validation Error', 'Discount percentage must be between 0 and 100', 'warning');
    return;
  }

  if (!startDate) {
    Swal.fire('Validation Error', 'Start date is required', 'warning');
    return;
  }

  if (!endDate) {
    Swal.fire('Validation Error', 'End date is required', 'warning');
    return;
  }

  if (new Date(startDate) > new Date(endDate)) {
    Swal.fire('Validation Error', 'Start date cannot be after end date', 'warning');
    return;
  }

  const result = await Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to save these changes?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, save it!',
  });

  if (result.isConfirmed) {
    const updatedOffer = {
      offerName,
      description,
      discountPercentage,
      isActive,
      startDate,
      endDate,
      productId,
    };

    try {
      const response = await axios.put(`/admin/product/edit/offers/${offerId}`, updatedOffer);

      if (response.data.ok) {
        Swal.fire('Saved!', 'Your changes have been saved.', 'success');
        location.reload();
      } else {
        Swal.fire('Error!', 'An error occurred while saving.', 'error');
      }
    } catch (error) {
      console.error('Error updating offer:', error);
      Swal.fire('Error!', 'Failed to save changes. Please try again.', 'error');
    }
  }
});

  function filterOffers() {
    const search = document.getElementById("productNameFilter").value;
    console.log('====================================');
    console.log(search);
    console.log('====================================');
     
    window.location.href = `/admin/product-offers?productName=${search}`;
}
</script>
