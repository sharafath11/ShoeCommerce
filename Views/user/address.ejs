<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="logo.png" />
    <title>User Profile</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <link rel="stylesheet" href="css/linearicons.css" />
    <link rel="stylesheet" href="css/font-awesome.min.css" />
    <link rel="stylesheet" href="css/themify-icons.css" />
    <link rel="stylesheet" href="css/bootstrap.css" />
    <link rel="stylesheet" href="css/owl.carousel.css" />
    <link rel="stylesheet" href="css/nice-select.css" />
    <link rel="stylesheet" href="css/nouislider.min.css" />
    <link rel="stylesheet" href="css/ion.rangeSlider.css" />
    <link rel="stylesheet" href="css/ion.rangeSlider.skinFlat.css" />
    <link rel="stylesheet" href="css/magnific-popup.css" />
    <link rel="stylesheet" href="css/main.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <style>
      .profile-container {
        max-width: 700px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
      .profile-header {
        text-align: center;
        margin-bottom: 20px;
      }
      .profile-avatar {
        width: 80px;
        height: 80px;
        background-color: #ccc;
        border-radius: 50%;
        margin: 0 auto 10px;
      }
      .nav-tabs .nav-link {
        color: #555;
      }
      .nav-tabs .nav-link.active {
        background-color: #f8f9fa;
      }
      /* Hide the arrows in Chrome, Safari, Edge, and Opera */
      input[type="number"]::-webkit-outer-spin-button,
      input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Hide the arrows in Firefox */
      input[type="number"] {
        -moz-appearance: textfield;
      }
      .btn-warning {
        background-color: #ffc107; /* Bootstrap warning color */
        border-color: #ffc107; /* Same as background color */
        transition: background-color 0.3s, border-color 0.3s;
      }

      .btn-warning:hover {
        background-color: #e0a800; /* Darker shade of yellow on hover */
        border-color: #e0a800; /* Same as background color */
      }
    </style>
  </head>
  <body>
    <%- include('partials/header') %>

    <div class="profile-container py-5">
      <div class="profile-header">
        <div class="profile-avatar">
          <i class="bi bi-person-circle" style="font-size: 3rem"></i>
        </div>
        <h4><%= user.username %></h4>
        <p><%= user.email %></p>
      </div>

      <ul class="nav nav-tabs justify-content-center mb-4" id="profileTabs">
        <li class="nav-item">
          <a class="nav-link" href="/profile">
            <i class="bi bi-person mr-2"></i> Personal
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" data-bs-toggle="tab" href="/address">
            <i class="bi bi-house mr-2"></i> Address
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/orders">
            <i class="bi bi-box mr-2"></i> Orders
          </a>
        </li>

        <li class="nav-item">
          <a class="nav-link" href="/settings">
            <i class="bi bi-gear mr-2"></i> Settings
          </a>
        </li>
      </ul>

      <div class="tab-content">
        <div class="tab-pane fade show active" id="address">
          <div class="container mt-5">
            <div class="card p-4">
              <h5>Addresses</h5>
              <form>
                <% addresses.forEach((address, index) => { %>

                <div class="address-group mb-4">
                  <div
                    class="d-flex justify-content-between align-items-center mb-3"
                  >
                    <h6>Address <%= index + 1 %> (<%= address.type %>)</h6>
                    <button
                      type="button"
                      class="btn btn-outline-danger btn-sm"
                      onclick="removeAddress('<%= address._id %>')"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="lucide lucide-trash2 h-4 w-4"
                      >
                        <path d="M3 6h18"></path>
                        <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                        <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                        <line x1="10" x2="10" y1="11" y2="17"></line>
                        <line x1="14" x2="14" y1="11" y2="17"></line>
                      </svg>
                    </button>
                  </div>
                  <h3><%= user.username %></h3>
                  <div class="row mb-3">
                    <div class="col-md-4">
                      <label for="type<%= index %>" class="form-label"
                        >name</label
                      >
                      <input
                        type="text"
                        name="type"
                        class="form-control"
                        id="name<%= index %>"
                        placeholder="name"
                        value="<%= address.name %>"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="type<%= index %>" class="form-label"
                        >Type</label
                      >
                      <input
                        type="text"
                        name="type"
                        class="form-control"
                        id="type<%= index %>"
                        placeholder="Home"
                        value="<%= address.type %>"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="streetAddress<%= index %>" class="form-label"
                        >Street Address</label
                      >
                      <input
                        type="text"
                        name="streetAddress"
                        class="form-control"
                        id="streetAddress<%= index %>"
                        placeholder="123 Main St"
                        value="<%= address.streetAddress %>"
                        required
                      />
                    </div>
                  </div>
                  <div class="row mb-3">
                    <div class="col-md-6">
                      <label for="city<%= index %>" class="form-label"
                        >City</label
                      >
                      <input
                        type="text"
                        name="city"
                        class="form-control"
                        id="city<%= index %>"
                        placeholder="City"
                        value="<%= address.city %>"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="state" class="form-label"
                        >State/Province</label
                      >
                      <input
                        type="text"
                        name="state"
                        class="form-control"
                        id="state<%= index %>"
                        value="<%= address.state %>"
                        placeholder="state"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="zip<%= index %>" class="form-label"
                        >Zip Code</label
                      >
                      <input
                        type="text"
                        name="zip"
                        class="form-control"
                        id="zip<%= index %>"
                        placeholder="Zip Code"
                        value="<%= address.postalCode %>"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="country" class="form-label">Country</label>
                      <input
                        type="text"
                        name="country"
                        class="form-control"
                        id="country<%= index %>"
                        value="<%= address.country %>"
                        placeholder="United States"
                        required
                      />
                    </div>
                  </div>
                  <button
                    type="button"
                    class="btn btn-warning"
                    onclick="UpdateAddress(event,'<%= address._id %>','<%= index %>')"
                  >
                    Update
                  </button>
                  <hr class="mt-4" />
                </div>
                <% }); %>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="container mt-5">
        <form
          id="addressForm"
          onsubmit="return addAddress(event,'<%= user._id %>')"
        >
          <div class="row mb-3">
            <div class="col-md-4">
              <label for="type" class="form-label">Name</label>
              <input
                type="text"
                name="name"
                class="form-control"
                id="name"
                placeholder="Name"
                required
              />
            </div>
            <div class="col-md-4">
              <label for="type" class="form-label">Type</label>
              <input
                type="text"
                name="type"
                class="form-control"
                id="type"
                placeholder="Home"
                required
              />
            </div>
            <div class="col-md-4">
              <label for="streetAddress" class="form-label"
                >Street Address</label
              >
              <input
                type="text"
                name="streetAddress"
                class="form-control"
                id="streetAddress"
                placeholder="123 Main St"
                required
              />
            </div>
          </div>
          <div class="row mb-3">
            <div class="col-md-4">
              <label for="city" class="form-label">City</label>
              <input
                type="text"
                name="city"
                class="form-control"
                id="city"
                placeholder="Anytown"
                required
              />
            </div>
            <div class="col-md-4">
              <label for="state" class="form-label">State/Province</label>
              <input
                type="text"
                name="state"
                class="form-control"
                id="state"
                placeholder="ST"
                required
              />
            </div>
            <div class="col-md-4">
              <label for="postalCode" class="form-label">ZIP/Postal Code</label>
              <input
                type="text"
                name="postalCode"
                class="form-control"
                id="postalCode"
                placeholder="12345"
                required
              />
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <label for="country" class="form-label">Country</label>
              <input
                type="text"
                name="country"
                class="form-control"
                id="country"
                placeholder="United States"
                required
              />
            </div>
          </div>
          <button type="submit" class="btn btn-primary mt-3">
            Add Address
          </button>
        </form>
      </div>
    </div>

    <script src="js/vendor/jquery-2.2.4.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"
      integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
      crossorigin="anonymous"
    ></script>
    <script src="js/vendor/bootstrap.min.js"></script>
    <script src="js/jquery.ajaxchimp.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.sticky.js"></script>
    <script src="js/nouislider.min.js"></script>
    <script src="js/countdown.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <!--gmaps Js-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
    <script src="js/gmaps.min.js"></script>
    <script src="js/main.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
      function addAddress(event, userId) {
        event.preventDefault();
        const type = document.getElementById("type").value.trim();
        const streetAddress = document
          .getElementById("streetAddress")
          .value.trim();
        const city = document.getElementById("city").value.trim();
        const state = document.getElementById("state").value.trim();
        const postalCode = document.getElementById("postalCode").value.trim();
        const country = document.getElementById("country").value.trim();
        const name = document.getElementById("name").value.trim();
        const formData = {
          name: name,
          type: type,
          streetAddress: streetAddress,
          city: city,
          state: state,
          postalCode: postalCode,
          country: country,
          userId: userId,
        };

        if (!isValidPincode(postalCode)) {
          showToast("Invalid postal code");
          return;
        }

        if (type.length < 3 || /\s{2,}/.test(type)) {
          showToast(
            "Type must be at least 3 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (streetAddress.length < 5 || /\s{2,}/.test(streetAddress)) {
          showToast(
            "Street address must be at least 5 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(city) || /\s{2,}/.test(city)) {
          showToast(
            "City name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(state) || /\s{2,}/.test(state)) {
          showToast(
            "State name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(country) || /\s{2,}/.test(country)) {
          showToast(
            "Country name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (name.length === 0 || /\s{2,}/.test(name)) {
          showToast("Name cannot be empty or contain consecutive spaces.");
          return;
        }

        confirmAction("Are you sure?", "Add the address?", "Yes, Add it!").then(
          (result) => {
            if (result.isConfirmed) {
              axios
                .post("/addAddress", formData)
                .then((response) => {
                  if (response.data.ok) {
                    showToast(response.data.msg);

                    setTimeout(() => {
                      window.location.reload();
                    }, 1000);
                  } else {
                    showToast(response.data.msg);
                  }
                })
                .catch((error) => {
                  showToast("There was an error adding the address:", error);
                });

              return false;
            }
          }
        );
      }
      function removeAddress(addressId) {
        confirmAction(
          "Are you sure?",
          "Remove this addres?",
          "Yes, remove it!"
        ).then((result) => {
          if (result.isConfirmed) {
            axios
              .delete(`/removeAddress/${addressId}`)
              .then((response) => {
                if (response.data.ok) {
                  showToast(response.data.msg);
                  setTimeout(() => {
                    window.location.reload();
                  }, 1000);
                } else {
                  showToast(response.data.msg);
                }
              })
              .catch((error) => {
                showToast("There was an error adding the address:", error);
              });
          }
        });
      }

      function UpdateAddress(event, addressId, index) {
        event.preventDefault();
        const type = document.getElementById(`type${index}`).value.trim();
        const streetAddress = document.getElementById(
          `streetAddress${index}`
        ).value.trim();
        const city = document.getElementById(`city${index}`).value.trim();
        const postalCode = document.getElementById(`zip${index}`).value.trim();
        const state = document.getElementById(`state${index}`).value.trim();
        const country = document.getElementById(`country${index}`).value.trim();
        const name=document.getElementById(`name${index}`).value.trim()

        const formData = {
          name,
          type: type,
          streetAddress: streetAddress,
          city: city,
          state: state,
          postalCode: postalCode,
          country: country,
          addressId: addressId,
        };
        if (!isValidPincode(postalCode)) {
          showToast("Invalid postal code");
          return;
        }

        if (type.length < 3 || /\s{2,}/.test(type)) {
          showToast(
            "Type must be at least 3 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (streetAddress.length < 5 || /\s{2,}/.test(streetAddress)) {
          showToast(
            "Street address must be at least 5 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(city) || /\s{2,}/.test(city)) {
          showToast(
            "City name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(state) || /\s{2,}/.test(state)) {
          showToast(
            "State name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(country) || /\s{2,}/.test(country)) {
          showToast(
            "Country name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (name.length === 0 || /\s{2,}/.test(name)) {
          showToast("Name cannot be empty or contain consecutive spaces.");
          return;
        }
        confirmAction(
          "Are you sure?",
          "Update the address?",
          "Yes, Add it!"
        ).then((result) => {
          if (result.isConfirmed) {
            axios
              .post("/updateAddress", formData)
              .then((response) => {
                console.log(response.data);

                if (response.data.ok) {
                  showToast(response.data.msg);
                } else {
                  showToast(response.data.msg);
                }
              })
              .catch((error) => {
                showToast("There was an error adding the address:", error);
              });
          }
        });
      }

      function confirmAction(title, text, confirmButtonText) {
        return Swal.fire({
          title: title,
          text: text,
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: confirmButtonText,
        });
      }
      function showToast(message) {
        Toastify({
          text: message,
          duration: 2000,
          gravity: "top",
          position: "right",
          backgroundColor: "#333",
          stopOnFocus: true,
        }).showToast();
      }
      function isValidPincode(pincode) {
        const indiaPinPattern = /^\d{6}$/;
        return indiaPinPattern.test(pincode);
      }
    </script>
  </body>
</html>
