<!DOCTYPE html>
<html lang="zxx" class="no-js">
  <head>
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <link rel="shortcut icon" href="logo.png" />

    <meta name="author" content="CodePixar" />

    <meta name="description" content="" />

    <meta name="keywords" content="" />

    <meta charset="UTF-8" />

    <title>ST Shop</title>

    <link rel="stylesheet" href="/css/linearicons.css" />
    <link rel="stylesheet" href="/css/font-awesome.min.css" />
    <link rel="stylesheet" href="/css/themify-icons.css" />
    <link rel="stylesheet" href="/css/bootstrap.css" />
    <link rel="stylesheet" href="/css/owl.carousel.css" />
    <link rel="stylesheet" href="/css/nice-select.css" />
    <link rel="stylesheet" href="/css/nouislider.min.css" />
    <link rel="stylesheet" href="/css/ion.rangeSlider.css" />
    <link rel="stylesheet" href="/css/ion.rangeSlider.skinFlat.css" />
    <link rel="stylesheet" href="/css/magnific-popup.css" />
    <link rel="stylesheet" href="/css/main.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />
  </head>

  <body>
    <style>
      .primary-btn {
        margin-top: 20px;
        background-color: #3498db;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
      }

      .primary-btn:hover {
        background-color: #2980b9;
      }

      .form-check-input {
        width: 20px;
        height: 20px;
        background-color: #f0f0f0;
        border-radius: 3px;
        border: 2px solid #ddd;
      }

      .form-check-input:checked {
        background-color: #007bff;
        border-color: #007bff;
      }

      .form-check-label {
        padding-left: 8px;
        font-size: 16px;
      }
      /*  */

.dropdown-menu {
  width: 100%; /* Full width for better spacing */
  max-width: 400px; /* Adjust size for a cleaner look */
}

.dropdown-item {
  padding: 10px 15px;
  border-bottom: 1px solid #f0f0f0; /* Light border between items */
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.dropdown-item:last-child {
  border-bottom: none;
}

.dropdown-item strong {
  font-size: 1.1rem; /* Larger font for coupon name */
}

.dropdown-item small {
  color: #6c757d; /* Muted text for the expiration date */
}



.dropdown-menu p-3 {
  border-radius: 10px;
  background-color: #ffffff;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow for a floating effect */
}

    </style>

    <!-- Start Header Area -->
    <%- include('partials/header') %>
    <!-- End Header Area -->

    <!-- Start Banner Area -->
    <section class="banner-area organic-breadcrumb">
      <div class="container">
        <div
          class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end"
        >
          <div class="col-first">
            <h1>Checkout</h1>
            <nav class="d-flex align-items-center">
              <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
              <a href="/checkout">Checkout</a>
            </nav>
          </div>
        </div>
      </div>
    </section>
 
    <section class="checkout_area section_gap">
      <div class="container">
        <div class="cupon_area">
          <div class="coupon-container">
            <input
              type="text"
              id="couponCode"
              placeholder="Enter coupon code"
              class="form-control"
            />
            <button class="tp_btn btn" id="coupen-btn" onclick="applyCouponCode()">
              Apply Coupon
            </button>
            <div class="btn-group">
              <button class="tp_btn btn dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Available Coupons
              </button>
              <button class="tp_btn btn " type="button" onclick="removeCoupenHandler()">
                Remove coupen
              </button>
              <div class="dropdown-menu p-3 shadow-lg rounded">
                <% if (coupens.length > 0) { %>
                  <% coupens.forEach((coupen) => { %>
                    <div class="dropdown-item d-flex justify-content-between align-items-center">
                      <div>
                        <strong><%= coupen.name %></strong>
                        <br>
                        <small class="text-muted">Expires on: <%= coupen.endingDate.toDateString() %></small>
                       
                      </div>
                      
                    </div>
                    <br>
                    <span><%= coupen.code %></span>
                  <% }) %>
                <% } else { %>
                  <div class="dropdown-item text-muted">No available coupons</div>
                <% } %>
              </div>
              
            </div>
            
            
            <div id="couponMessage" class="mt-2"></div>
           
            
          </div>
        </div>
        <div class="billing_details">
          <div class="row">
            <div class="col-lg-8">
              <h3>Billing Details</h3>
              <!-- kaka -->

              <form>
                <% addresses.forEach((address, index) => { %>
                <div class="address-group mb-4">
                  <div
                    class="d-flex justify-content-between align-items-center mb-3"
                  >
                    <h6>Address <%= index + 1 %> (<%= address.type %>) <input
                      type="checkbox"
                      name="selectedAddresses"
                      id="check<%= index %>"
                      value="<%= index %>"
                    /></h6>

                    
                    <label for="check<%= index %>"></label>
                  </div>
                  <div class="row mb-3">
                    <div class="col-md-4">
                      <label for="streetAddress<%= index %>" class="form-label"
                        >Street Address</label
                      >
                      <input
                        type="text"
                        name="name"
                        class="form-control"
                        id="name<%= index %>"
                        placeholder="123 Main St"
                        value="<%= address.name %>"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="type<%= index %>" class="form-label"
                        >Type</label
                      >
                      <input
                        type="text"
                        name="type"
                        class="form-control"
                        id="type<%= index %>"
                        placeholder="Home"
                        value="<%= address.type %>"
                        required
                      />
                    </div>
                    <div class="col-md-4">
                      <label for="streetAddress<%= index %>" class="form-label"
                        >Street Address</label
                      >
                      <input
                        type="text"
                        name="streetAddress"
                        class="form-control"
                        id="streetAddress<%= index %>"
                        placeholder="123 Main St"
                        value="<%= address.streetAddress %>"
                        required
                      />
                    </div>
                  </div>
                  <div class="row mb-3">
                    <div class="col-md-6">
                      <label for="city<%= index %>" class="form-label"
                        >City</label
                      >
                      <input
                        type="text"
                        name="city"
                        class="form-control"
                        id="city<%= index %>"
                        placeholder="City"
                        value="<%= address.city %>"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="state" class="form-label"
                        >State/Province</label
                      >
                      <input
                        type="text"
                        name="state"
                        class="form-control"
                        id="state<%= index %>"
                        value="<%= address.state %>"
                        placeholder="state"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="zip<%= index %>" class="form-label"
                        >Zip Code</label
                      >
                      <input
                        type="text"
                        name="zip"
                        class="form-control"
                        id="zip<%= index %>"
                        placeholder="Zip Code"
                        value="<%= address.postalCode %>"
                        required
                      />
                    </div>
                    <div class="col-md-6">
                      <label for="country" class="form-label">Country</label>
                      <input
                        type="text"
                        name="country"
                        class="form-control"
                        id="country<%= index %>"
                        value="<%= address.country %>"
                        placeholder="United States"
                        required
                      />
                    </div>
                  </div>

                  <hr class="mt-4" />
                </div>
                <% }); %>
              </form>

              <!-- kakk kaynju -->
              <h2>New Address</h2>
              <form
                id="addressForm"
                onsubmit="return addAddress(event,'<%= user._id %>')"
              >
                <div class="row mb-3">
                  <div class="col-md-4">
                    <label for="type" class="form-label">Name</label>
                    <input
                      type="text"
                      name="name"
                      class="form-control"
                      id="name"
                      placeholder="Name"
                      required
                    />
                  </div>
                  <div class="col-md-4">
                    <label for="type" class="form-label">Type</label>
                    <input
                      type="text"
                      name="type"
                      class="form-control"
                      id="type"
                      placeholder="Home"
                      required
                    />
                  </div>
                  <div class="col-md-4">
                    <label for="streetAddress" class="form-label"
                      >Street Address</label
                    >
                    <input
                      type="text"
                      name="streetAddress"
                      class="form-control"
                      id="streetAddress"
                      placeholder="123 Main St"
                      required
                    />
                  </div>
                </div>
                <div class="row mb-3">
                  <div class="col-md-4">
                    <label for="city" class="form-label">City</label>
                    <input
                      type="text"
                      name="city"
                      class="form-control"
                      id="city"
                      placeholder="Anytown"
                      required
                    />
                  </div>
                  <div class="col-md-4">
                    <label for="state" class="form-label">State/Province</label>
                    <input
                      type="text"
                      name="state"
                      class="form-control"
                      id="state"
                      placeholder="ST"
                      required
                    />
                  </div>
                  <div class="col-md-4">
                    <label for="postalCode" class="form-label"
                      >ZIP/Postal Code</label
                    >
                    <input
                      type="text"
                      name="postalCode"
                      class="form-control"
                      id="postalCode"
                      placeholder="12345"
                      required
                    />
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-6">
                    <label for="country" class="form-label">Country</label>
                    <input
                      type="text"
                      name="country"
                      class="form-control"
                      id="country"
                      placeholder="United States"
                      required
                    />
                  </div>
                </div>
                <button type="submit" class="btn btn-primary mt-3">
                  Add Address
                </button>
              </form>
            </div>

            <div class="col-lg-4">
              <div class="order_box">
                <h2>Your Order</h2>
                <ul class="list">
                  <li>
                    <a href="#">Product <span>Total</span></a>
                  </li>
                  <% cartItems.forEach((item, index) => { %>

                  <input
                    id="productId-<%=index%>"
                    type="hidden"
                    value="<%= item.product. _id%>"
                  />
                  <li id="product-item-<%= index %>">
                    <a href="/singleprodect/<%= item.product. _id%>">
                      <strong id="product-name-<%= index %>"
                        ><%= item.product.name %>
                      </strong>
                      <strong class="ml-3" id="product-size-<%= index %>"
                        ><%= item.size %></strong
                      >
                      <span class="middle"
                        >x
                        <span id="product-quantity-<%= index %>"
                          ><%= item.quantity %></span
                        ></span
                      >
                      <span class="last" id="product-price-<%= index %>"
                        >₹<%= item.product.price * item.quantity %></span
                      >
                    </a>
                  </li>
                  <% }) %>
                </ul>

                <ul class="list list_2">
                  <li>
                    <a href="#"
                      >Subtotal
                      <span id="">
                        ₹<%= cartItems.reduce((total, item) => total +
                        (item.product.price * item.quantity), 0) %>
                      </span></a
                    >
                  </li>
                  <li>
                    <a href="#">Shipping <span>Flat rate: ₹50.00</span></a>
                  </li>
                  <li>
                    <a href="#">Discount <span id="discount">0%</span></a>
                  </li>
                  
                  <li>
                    <a href="#"
                      >Total
                      <span id="totalAmount">
                        ₹<%= cartItems.reduce((total, item) => total +
                        (item.product.price * item.quantity), 0) + 50 %>
                      </span></a
                    >
                  </li>
                </ul>
                <div class="payment_item">
                  <div class="radion_btn">
                    <button
                      class="primary-btn"
                      onclick="checkoutHandler(event,'<%=cartItems %>')"
                    >
                      Proceed to CASH ON DELIVERY
                    </button>
                  </div>
                  <p>
                    Please send a check to Store Name, Store Street, Store Town,
                    Store State / County, Store Postcode.
                  </p>
                </div>
                <div class="payment_item active">
                  <div class="radion_btn">
                    <input type="radio" id="f-option6" name="selector" />
                    <label for="f-option6">Online payment</label>
                    <img src="img/product/card.jpg" alt="" />
                    
                  </div>
                  
                </div>

                
                <span class="primary-btn" onclick="proceedToPayment()">Proceed to online</span>
                <span class="primary-btn" onclick="walletPayHandler()">Pay using wallet</span>
                
              </div>
              
            </div>
          </div>
        </div>
      </div>
    </section>
    <!--================End Checkout Area =================-->

    <!-- start footer Area -->
    <%- include('partials/footer') %>
    <!-- End footer Area -->

    <script src="js/vendor/jquery-2.2.4.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"
      integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
      crossorigin="anonymous"
    ></script>
    <script src="js/vendor/bootstrap.min.js"></script>
    <script src="js/jquery.ajaxchimp.min.js"></script>
    <script src="js/jquery.nice-select.min.js"></script>
    <script src="js/jquery.sticky.js"></script>
    <script src="js/nouislider.min.js"></script>
    <script src="js/jquery.magnific-popup.min.js"></script>
    <script src="js/owl.carousel.min.js"></script>
    <!--gmaps Js-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
    <script src="js/gmaps.min.js"></script>
    <script src="js/main.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  </body>
  <script>
    let coupenId;
    let coupenDiscount=0
    function checkoutHandler(e) {
      
      const selectedCheckboxes = document.querySelectorAll(
        'input[name="selectedAddresses"]:checked'
      );
      const totalAmountSpan = document.getElementById("totalAmount");
      const totalAmount = totalAmountSpan.innerText;
      const orderTotal = parseFloat(totalAmount.replace(/[₹,]/g, '').trim());
      const addAddress = [];
      const selectedAddresses = Array.from(selectedCheckboxes).map(
        (checkbox) => {
          const index = checkbox.value;

          const address = {
            type: document.getElementById(`type${index}`).value,
            streetAddress: document.getElementById(`streetAddress${index}`)
              .value,
            city: document.getElementById(`city${index}`).value,
            state: document.getElementById(`state${index}`).value,
            zip: document.getElementById(`zip${index}`).value,
            country: document.getElementById(`country${index}`).value,
          };

          addAddress.push(address);

          return address;
        }
      );

      const orderItems = gatherOrderData();
      if (orderItems.length === 0) {
        showToast("Please add some products in Cart");
        return;
      }
      const datas = {
        selectedAddresses: addAddress,
        cartItems: orderItems,
        coupenId:coupenId||"",
        paymentMethod:"COD",
        
      };
      let ok = false;
      
      if (selectedAddresses.length == 0) {
        showToast("Please select a addres");
        ok = true;
      }
      console.log(orderTotal)
      if(Number(orderTotal)>2500){
        showToast("only availble cash on delivery in under 2500")
        return 
      }
      if (ok) return;
      confirmAction(
        "Are you sure?",
        "Order the Products?",
        "Yes, Order it!"
      ).then((result) => {
        if (result.isConfirmed) {
          axios
            .post("/checkout/cod", datas)
            .then((response) => {
              console.log('====================================');
              console.log(response.data);
              console.log('====================================');
              if (response.data.ok) {
                showToast(response.data.msg);
                setTimeout(() => {
                  window.location.href = response.data.red;
                }, 1000);
              } else {
                showToast(response.data.msg);
              }
            })
            .catch((error) => {
              console.error("Checkout Error:", error);
              showToast("Checkout failed. Please try again.");
            });
        }
      });
    }
    function confirmAction(title, text, confirmButtonText) {
      return Swal.fire({
        title: title,
        text: text,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: confirmButtonText,
      });
    }
    function showToast(message) {
      Toastify({
        text: message,
        duration: 2000,
        gravity: "top",
        position: "right",
        backgroundColor: "#333",
        stopOnFocus: true,
      }).showToast();
    }
    function isValidPincode(pincode) {
      const indiaPinPattern = /^\d{6}$/;
      return indiaPinPattern.test(pincode);
    }
    function gatherOrderData(coupen) {
      const orderData = [];
      const items = document.querySelectorAll('.list li[id^="product-item-"]');

      items.forEach((item, index) => {
        const productId = document.getElementById(`productId-${index}`).value;
        const size =Number( document.getElementById(`product-size-${index}`).innerText)
        if (!size) {
          showToast("Please selecet you want size in cart");
          return;
        }
        const productName = document.getElementById(
          `product-name-${index}`
        ).innerText;
        const quantity = document.getElementById(
          `product-quantity-${index}`
        ).innerText;
        const price = document
          .getElementById(`product-price-${index}`)
          .innerText.replace("₹", "");
        orderData.push({
          productId,
          name: productName,
          size: parseInt(size),
          quantity: parseInt(quantity, 10),
          price: Number(price),
          total: Number(price) * Number(quantity, 10),
        });
      });

      return orderData;
    }

    function addAddress(event, userId) {
      event.preventDefault();
      const type = document.getElementById("type").value.trim();
      const streetAddress = document.getElementById("streetAddress").value.trim();
      const city = document.getElementById("city").value.trim();
      const state = document.getElementById("state").value.trim();
      const postalCode = document.getElementById("postalCode").value.trim();
      const country = document.getElementById("country").value.trim();
      const name = document.getElementById("name").value.trim();
      const formData = {
        name: name,
        type: type,
        streetAddress: streetAddress,
        city: city,
        state: state,
        postalCode: postalCode,
        country: country,
        userId: userId,
      };

      if (!isValidPincode(postalCode)) {
          showToast("Invalid postal code");
          return;
        }

        if (type.length < 3 || /\s{2,}/.test(type)) {
          showToast(
            "Type must be at least 3 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (streetAddress.length < 5 || /\s{2,}/.test(streetAddress)) {
          showToast(
            "Street address must be at least 5 characters long and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(city) || /\s{2,}/.test(city)) {
          showToast(
            "City name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(state) || /\s{2,}/.test(state)) {
          showToast(
            "State name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (!/^[a-zA-Z\s]+$/.test(country) || /\s{2,}/.test(country)) {
          showToast(
            "Country name should contain only letters and cannot contain consecutive spaces."
          );
          return;
        }

        if (name.length === 0 || /\s{2,}/.test(name)) {
          showToast("Name cannot be empty or contain consecutive spaces.");
          return;
        }
      confirmAction("Are you sure?", "Add the address?", "Yes, Add it!").then(
        (result) => {
        

          if (result.isConfirmed) {
            axios
              .post("/addAddress", formData)
              .then((response) => {
                if (response.data.ok) {
                  showToast(response.data.msg);
                  setTimeout(() => {
                    window.location.reload();
                  });
                } else {
                  showToast(response.data.msg);
                }
              })
              .catch((error) => {
                showToast("There was an error adding the address:", error);
              });

            return false;
          }
        }
      );
    }
    let tempTotal=0
    async function applyCouponCode() {
  const couponCode = document.getElementById("couponCode").value.trim();
  const messageDiv = document.getElementById("couponMessage");
  const totalAmountSpan = document.getElementById("totalAmount");
  const totalAmount = totalAmountSpan.innerText;
  const orderTotal = parseFloat(totalAmount.replace(/[₹,]/g, '').trim());
  tempTotal=orderTotal

  if (!couponCode) {
    messageDiv.innerText = "Please enter a coupon code.";
    return;
  }

  try {
    const response = await axios.post("/coupons/apply", {
      code: couponCode,
      orderTotal: orderTotal, 
    });

    const result = response.data;
    if (result.ok) {
      messageDiv.innerText = `Coupon applied! Discount: ${result.discountValue} ${result.discountType}. New Total: ₹${result.newTotal}`;
      totalAmountSpan.innerText = `₹${parseInt(result.newTotal)}`;
      document.getElementById("discount").innerText = `${result.discountValue}%`;
      document.getElementById("coupen-btn").disabled=true
      coupenId = result.coupon._id;  
      showToast(result.msg)
    } else {
      showToast(result.msg);  
    }
  } catch (error) {
    if (error.response && error.response.data) {
      messageDiv.innerText = error.response.data.message || "Failed to apply coupon.";
    } else {
      messageDiv.innerText = "An error occurred. Please try again later.";
    }
    console.error("Error applying coupon:", error);  
  }

}


  </script>
<script>
  function proceedToPayment() {

  const selectedCheckboxes = document.querySelectorAll(
    'input[name="selectedAddresses"]:checked'
  );

  const addAddress = [];
  const selectedAddresses = Array.from(selectedCheckboxes).map(
    (checkbox) => {
      const index = checkbox.value;

      const address = {
        type: document.getElementById(`type${index}`).value,
        streetAddress: document.getElementById(`streetAddress${index}`).value,
        city: document.getElementById(`city${index}`).value,
        state: document.getElementById(`state${index}`).value,
        zip: document.getElementById(`zip${index}`).value,
        country: document.getElementById(`country${index}`).value,
      };

      addAddress.push(address);
      return address;
    }
  );

  if (selectedAddresses.length === 0) {
    showToast("Please select an address");
    return;
  }

  const invalidPincode = addAddress.some(address => !isValidPincode(address.zip));
  if (invalidPincode) {
    showToast("Please enter a valid 6-digit pincode");
    return;
  }

  const orderItems = gatherOrderData();
  if (orderItems.length === 0) {
    showToast("Please add some products to your cart");
    return;
  }
  const totalAmountSpan = document.getElementById("totalAmount");
  const totalAmount = totalAmountSpan.innerText;
  const orderTotal = parseFloat(totalAmount.replace(/[₹,]/g, '').trim());
  const totalAmountInPaise = orderTotal * 100
  const orderDetails = {
    amount: totalAmountInPaise,  
    currency: "INR",
    receipt: "receipt#1",
    selectedAddresses: addAddress,
    cartItems: orderItems,
    coupenId: coupenId
  };

  confirmAction("Are you sure?", "Proceed with online payment?", "Yes, Pay Now!")
    .then(result => {
      if (result.isConfirmed) {
        axios.post('/payment/create-order', orderDetails)
          .then(response => {
            const { orderId, amount, currency ,order} = response.data;

          console.log(response.data)
            var options = {
              "key": "rzp_test_0NNl9o6nbS0KBP", 
              "amount":Math.ceil(amount * 100 - 0.50),
              "currency": currency,
              "name": "ST SHOP",
              "description": "Order Payment",
              "order_id": orderId, 
              "handler": function (responseV) {
                showToast("Payment Successful: " + responseV.razorpay_payment_id);
                axios.post('/payment/verify', {
                  _id:order._id,
                  
                  paymentId: responseV.razorpay_payment_id,
                  orderId: responseV.razorpay_order_id,
                  signature: responseV.razorpay_signature
                }).then(verificationResponse => {
                  setTimeout(() => {
                 window.location.href=verificationResponse.data.red
                }, 1000);
                  
                }).catch(err => {
                  showToast("Payment verification failed.");
                  console.error("Verification failed:", err);
                });
              },
              "modal": {
            "ondismiss": function () {
              
              showToast("Payment was cancelled. retrry option in order..");
              window.location.reload(); // Refresh the page on cancel
            }
          }
            };

            var rzp1 = new Razorpay(options);
            rzp1.open();
          })
          .catch(err => {
            console.error("Payment initiation failed:", err);
            showToast("Payment initiation failed. Please try again.");
          });
      }
    });
}





function walletPayHandler() {
  const selectedCheckboxes = document.querySelectorAll(
    'input[name="selectedAddresses"]:checked'
  );

  const addAddress = [];
  const selectedAddresses = Array.from(selectedCheckboxes).map(
    (checkbox) => {
      const index = checkbox.value;

      const address = {
        type: document.getElementById(`type${index}`).value,
        streetAddress: document.getElementById(`streetAddress${index}`).value,
        city: document.getElementById(`city${index}`).value,
        state: document.getElementById(`state${index}`).value,
        zip: document.getElementById(`zip${index}`).value,
        country: document.getElementById(`country${index}`).value,
      };

      addAddress.push(address);
      return address;
    }
  );
  if (selectedAddresses.length === 0) {
    showToast("Please select an address");
    return;
  }
  const invalidPincode = addAddress.some(address => !isValidPincode(address.zip));
  if (invalidPincode) {
    showToast("Please enter a valid 6-digit pincode");
    return;
  }
  const orderItems = gatherOrderData();
  if (orderItems.length === 0) {
    showToast("Please add some products to your cart");
    return;
  }
  const totalAmountSpan = document.getElementById("totalAmount");
  const totalAmount = totalAmountSpan.innerText;
  const orderTotal = parseFloat(totalAmount.replace(/[₹,]/g, '').trim());
  const totalAmountInPaise = orderTotal 
  const orderDetails = {
    amount: totalAmountInPaise,  
    selectedAddresses: addAddress,
    cartItems: orderItems,
    coupenId: coupenId || "" 
  };
  Swal.fire({
    title: 'Confirm Payment',
    text: `Are you sure you want to proceed with the payment of ₹${orderTotal}?`,
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, proceed!',
    cancelButtonText: 'No, cancel!',
  }).then((result) => {
    if (result.isConfirmed) {
      try {
        axios.post("/checkout/wallet/pay", { orderDetails })
          .then((response) => {
            if (response.data.ok) {
              showToast(response.data.msg)
              setTimeout(() => {
                  window.location.href = response.data.red;
                }, 1000);
            } else {
              showToast(response.data.msg); 
            }
          })
          .catch((error) => {
            showToast("An error occurred while processing the payment. Please try again.");
            console.error("Payment error:", error);
          });
      } catch (error) {
        showToast("An unexpected error occurred. Please try again.");
        console.error("Unexpected error:", error);
      }
    } else {
      showToast("Payment canceled.");
    }
  });
}
function removeCoupenHandler(){
  if(!tempTotal || tempTotal===0){
    return showToast("Please applay coupen ")
  }
   let total=Number(tempTotal)
   document.getElementById("discount").innerText = `${0}%`;
   document.getElementById("coupen-btn").disabled=false;
   const messageDiv = document.getElementById("couponMessage");
   messageDiv.innerText = `Coupen removed`;
   document.getElementById("couponCode").value=""
   const totalAmountSpan = document.getElementById("totalAmount");
    totalAmountSpan.innerText=`₹ ${total}`;
    coupenId=null
}








function confirmAction(title, text, confirmButtonText) {
  return Swal.fire({
    title: title,
    text: text,
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#3085d6",
    cancelButtonColor: "#d33",
    confirmButtonText: confirmButtonText,
  });
}


function showToast(message) {
  Toastify({
    text: message,
    duration: 2000,
    gravity: "top",
    position: "right",
    backgroundColor: "#333",
    stopOnFocus: true,
  }).showToast();
}



</script>
<script>
 

</script>
</html>
